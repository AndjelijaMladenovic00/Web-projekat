// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Models;

namespace Projekat.Migrations
{
    [DbContext(typeof(Context))]
    [Migration("20211211213738_V1")]
    partial class V1
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.0");

            modelBuilder.Entity("Models.Gost", b =>
                {
                    b.Property<int>("GostID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("BrojLicneKarte")
                        .IsRequired()
                        .HasMaxLength(9)
                        .HasColumnType("nvarchar(9)");

                    b.Property<int?>("HotelID")
                        .HasColumnType("int");

                    b.Property<string>("Ime")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Prezime")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("GostID");

                    b.HasIndex("HotelID");

                    b.ToTable("Gosti");
                });

            modelBuilder.Entity("Models.Hotel", b =>
                {
                    b.Property<int>("HotelID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int>("BrojSobaPoSpratu")
                        .HasColumnType("int");

                    b.Property<int>("BrojSpratova")
                        .HasColumnType("int");

                    b.Property<int>("Cena_III_kat")
                        .HasColumnType("int");

                    b.Property<int>("Cena_II_kat")
                        .HasColumnType("int");

                    b.Property<int>("Cena_I_kat")
                        .HasColumnType("int");

                    b.Property<string>("Lokacija")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Naziv")
                        .IsRequired()
                        .HasMaxLength(70)
                        .HasColumnType("nvarchar(70)");

                    b.HasKey("HotelID");

                    b.ToTable("Hoteli");
                });

            modelBuilder.Entity("Models.Recepcioner", b =>
                {
                    b.Property<int>("RecepcionerID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int?>("HotelID")
                        .HasColumnType("int");

                    b.Property<string>("ID_kartica")
                        .IsRequired()
                        .HasMaxLength(5)
                        .HasColumnType("nvarchar(5)");

                    b.Property<string>("Ime")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Prezime")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("RecepcionerID");

                    b.HasIndex("HotelID");

                    b.ToTable("Recepcioneri");
                });

            modelBuilder.Entity("Models.Soba", b =>
                {
                    b.Property<int>("SobaID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int>("BrojKreveta")
                        .HasColumnType("int");

                    b.Property<int>("BrojSobe")
                        .HasColumnType("int");

                    b.Property<int?>("GostID")
                        .HasColumnType("int");

                    b.Property<int?>("HotelID")
                        .HasColumnType("int");

                    b.Property<bool>("Izdata")
                        .HasColumnType("bit");

                    b.Property<int>("Kategorija")
                        .HasColumnType("int");

                    b.Property<int?>("RecepcionerID")
                        .HasColumnType("int");

                    b.HasKey("SobaID");

                    b.HasIndex("GostID");

                    b.HasIndex("HotelID");

                    b.HasIndex("RecepcionerID");

                    b.ToTable("Sobe");
                });

            modelBuilder.Entity("Models.Gost", b =>
                {
                    b.HasOne("Models.Hotel", "Hotel")
                        .WithMany("Gosti")
                        .HasForeignKey("HotelID");

                    b.Navigation("Hotel");
                });

            modelBuilder.Entity("Models.Recepcioner", b =>
                {
                    b.HasOne("Models.Hotel", "Hotel")
                        .WithMany("Recepcioneri")
                        .HasForeignKey("HotelID");

                    b.Navigation("Hotel");
                });

            modelBuilder.Entity("Models.Soba", b =>
                {
                    b.HasOne("Models.Gost", "Gost")
                        .WithMany("Soba")
                        .HasForeignKey("GostID");

                    b.HasOne("Models.Hotel", "Hotel")
                        .WithMany("Sobe")
                        .HasForeignKey("HotelID");

                    b.HasOne("Models.Recepcioner", "Recepcioner")
                        .WithMany("IzdateSobe")
                        .HasForeignKey("RecepcionerID");

                    b.Navigation("Gost");

                    b.Navigation("Hotel");

                    b.Navigation("Recepcioner");
                });

            modelBuilder.Entity("Models.Gost", b =>
                {
                    b.Navigation("Soba");
                });

            modelBuilder.Entity("Models.Hotel", b =>
                {
                    b.Navigation("Gosti");

                    b.Navigation("Recepcioneri");

                    b.Navigation("Sobe");
                });

            modelBuilder.Entity("Models.Recepcioner", b =>
                {
                    b.Navigation("IzdateSobe");
                });
#pragma warning restore 612, 618
        }
    }
}
